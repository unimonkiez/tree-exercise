{"version":3,"sources":["webpack:///webpack/bootstrap 4c24a68bcbbe0903ec0e?4942","webpack:///./app/get-tree-by-app-data-worker.js","webpack:///./app/constant/node-type.js?10b1","webpack:///./app/common/get-tree-by-app-data.js"],"names":["self","onmessage","args","e","data","postMessage","DIRECTORY","FILE","CLASS","METHOD","seperator","tree","appData","methods","forEach","file","class_name","method_name","dirs","split","fileName","pop","flatTree","map","name","dirName","type","undefined","shift","currNodeInTree","children","sameChild","find","_name","_type","length","push"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;;;;;;;;AAEAA,MAAKC,SAAL,GAAiB,aAAK;AAAA,OACZC,IADY,GACHC,EAAEC,IADC,CACZF,IADY;;AAEpBF,QAAKK,WAAL,CAAiB,+DAAoBH,IAApB,EAAjB;AACD,EAHD,C;;;;;;;;;;;;ACFO,KAAMI,gCAAY,CAAlB;AACA,KAAMC,sBAAO,CAAb;AACA,KAAMC,wBAAQ,CAAd;AACA,KAAMC,0BAAS,CAAf,C;;;;;;;;;;;;;;;ACHP;;;;AAEA,KAAMC,YAAY,GAAlB;;mBAEe,mBAAW;AACxB,OAAIC,aAAJ;;AAEAC,WAAQC,OAAR,CAAgBC,OAAhB,CAAwB,gBAAuC;AAAA,SAApCC,IAAoC,QAApCA,IAAoC;AAAA,SAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,SAAlBC,WAAkB,QAAlBA,WAAkB;;AAC7D,SAAMC,OAAOH,KAAKI,KAAL,CAAWT,SAAX,CAAb;AACA,SAAMU,WAAWF,KAAKG,GAAL,EAAjB;;AAEA;AACA,SAAMC,wCACDJ,KAAKK,GAAL,CAAS;AAAA,cAAY;AACtBC,eAAMC,OADgB;AAEtBC;AAFsB,QAAZ;AAAA,MAAT,CADC,IAKJ;AACEF,aAAMJ,QADR;AAEEM;AAFF,MALI,EASJ;AACEF,aAAMR,UADR;AAEEU;AAFF,MATI,EAaJ;AACEF,aAAMP,WADR;AAEES;AAFF,MAbI,EAAN;;AAmBA,SAAIf,SAASgB,SAAb,EAAwB;AACtBhB,2BACKW,SAAS,CAAT,CADL;AAEEE,eAAMF,SAAS,CAAT,EAAYE,IAAZ,KAAqB,EAArB,GAA0Bd,SAA1B,GAAsCY,SAAS,CAAT,EAAYE;AAF1D;AAID;AACDF,cAASM,KAAT;;AAEA;AACA,SAAIC,iBAAiBlB,IAArB;AACAW,cAASR,OAAT,CAAiB,iBAAoB;AAAA,WAAjBU,IAAiB,SAAjBA,IAAiB;AAAA,WAAXE,IAAW,SAAXA,IAAW;;AACnC,WAAIG,eAAeC,QAAf,KAA4BH,SAAhC,EAA2C;AACzCE,wBAAeC,QAAf,GAA0B,CAAC,EAAEN,UAAF,EAAQE,UAAR,EAAD,CAA1B;AACAG,0BAAiBA,eAAeC,QAAf,CAAwB,CAAxB,CAAjB;AACD,QAHD,MAGO;AACL,aAAMC,YAAYF,eAAeC,QAAf,CAAwBE,IAAxB,CAA6B;AAAA,eAASC,KAAT,SAAGT,IAAH;AAAA,eAAsBU,KAAtB,SAAgBR,IAAhB;AAAA,kBAAmCF,SAASS,KAAT,IAAkBP,SAASQ,KAA9D;AAAA,UAA7B,CAAlB;AACA,aAAIH,SAAJ,EAAe;AACbF,4BAAiBE,SAAjB;AACD,UAFD,MAEO;AACL,eAAMI,SAASN,eAAeC,QAAf,CAAwBM,IAAxB,CAA6B,EAAEZ,UAAF,EAAQE,UAAR,EAA7B,CAAf;AACAG,4BAAiBA,eAAeC,QAAf,CAAwBK,SAAS,CAAjC,CAAjB;AACD;AACF;AACF,MAbD;AAcD,IAhDD;;AAkDA,UAAOxB,IAAP;AACD,E","file":"get-tree-by-app-data-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c24a68bcbbe0903ec0e","import getTreeByAppData from './common/get-tree-by-app-data.js';\n\nself.onmessage = e => {\n  const { args } = e.data;\n  self.postMessage(getTreeByAppData(...args));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/get-tree-by-app-data-worker.js","export const DIRECTORY = 0;\nexport const FILE = 1;\nexport const CLASS = 2;\nexport const METHOD = 4;\n\n\n\n// WEBPACK FOOTER //\n// ./app/constant/node-type.js","import { DIRECTORY, FILE, CLASS, METHOD } from 'app/constant/node-type.js';\n\nconst seperator = '/';\n\nexport default appData => {\n  let tree;\n\n  appData.methods.forEach(({ file, class_name, method_name }) => {\n    const dirs = file.split(seperator);\n    const fileName = dirs.pop();\n\n    // Create flat tree, order in array matters\n    const flatTree = [\n      ...dirs.map(dirName => ({\n        name: dirName,\n        type: DIRECTORY\n      })),\n      {\n        name: fileName,\n        type: FILE\n      },\n      {\n        name: class_name,\n        type: CLASS\n      },\n      {\n        name: method_name,\n        type: METHOD\n      }\n    ];\n\n    if (tree === undefined) {\n      tree = {\n        ...flatTree[0],\n        name: flatTree[0].name === '' ? seperator : flatTree[0].name\n      };\n    }\n    flatTree.shift();\n\n    // Insert flatTree to the tree\n    let currNodeInTree = tree;\n    flatTree.forEach(({ name, type }) => {\n      if (currNodeInTree.children === undefined) {\n        currNodeInTree.children = [{ name, type }];\n        currNodeInTree = currNodeInTree.children[0];\n      } else {\n        const sameChild = currNodeInTree.children.find(({ name: _name, type: _type }) => (name === _name && type === _type));\n        if (sameChild) {\n          currNodeInTree = sameChild;\n        } else {\n          const length = currNodeInTree.children.push({ name, type });\n          currNodeInTree = currNodeInTree.children[length - 1];\n        }\n      }\n    });\n  });\n\n  return tree;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/common/get-tree-by-app-data.js"],"sourceRoot":""}